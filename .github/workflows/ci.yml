---
name: CI

on:
  push:
    branches: ["**"]
  pull_request: {}

permissions:
  contents: read

jobs:
  build-test-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install "poetry==1.8.3"

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: Install deps
        run: poetry install

      - name: Setup git credentials for pre-commit
        run: |
          git config --global credential.helper store
          git config --global url."https://github.com/".insteadOf \
            "git@github.com:"
          git config --global url."https://github.com/".insteadOf \
            "ssh://git@github.com/"
          echo "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com" \
            > ~/.git-credentials

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: >
            pre-commit-${{ runner.os }}-${{
            hashFiles('.pre-commit-config.yaml') }}

      - name: Pre-commit (lint & security)
        run: poetry run pre-commit run --all-files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        run: poetry run pytest

      - name: Export deps for pip-audit
        run: >
          poetry export -f requirements.txt --without-hashes
          -o requirements.txt

      - name: pip-audit
        run: >
          pip install pip-audit && pip-audit -r requirements.txt --strict

      - name: Build Docker image
        run: docker build -f docker/Dockerfile -t lms-app:ci .
